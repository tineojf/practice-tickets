package gui;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import logic.tools.Tools;
import persistence.dao.TicketDAO;
import persistence.dao.PlaceDAO;
import persistence.dao.CompanyDAO;
import persistence.dao.UserDAO;
import persistence.models.TicketModel;

public class Ticket extends javax.swing.JFrame {

    private final ArrayList<javax.swing.JTextField> listField = new ArrayList<>();

    public Ticket() {
        initComponents();

        listField.add(fieldDate);
        listField.add(fieldNRO);
        listField.add(fieldTime);

        this.loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBillete = new javax.swing.JPanel();
        panelTitle = new javax.swing.JPanel();
        lbTitle = new javax.swing.JLabel();
        btnHome = new javax.swing.JButton();
        panelCrud = new javax.swing.JPanel();
        lbNRO = new javax.swing.JLabel();
        fieldNRO = new javax.swing.JTextField();
        lbDate = new javax.swing.JLabel();
        fieldDate = new javax.swing.JTextField();
        lbTime = new javax.swing.JLabel();
        fieldTime = new javax.swing.JTextField();
        lbOrigin = new javax.swing.JLabel();
        lbDestination = new javax.swing.JLabel();
        lbClient = new javax.swing.JLabel();
        lbCompany = new javax.swing.JLabel();
        lbSearch = new javax.swing.JLabel();
        selectSearch = new javax.swing.JComboBox<>();
        btnCreate = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClean = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        selectClient = new javax.swing.JComboBox<>();
        selectCompany = new javax.swing.JComboBox<>();
        selectOrigin = new javax.swing.JComboBox<>();
        selectDestination = new javax.swing.JComboBox<>();
        panelTable = new javax.swing.JPanel();
        subpanelTable = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelBillete.setBackground(new java.awt.Color(255, 215, 0));

        panelTitle.setBackground(new java.awt.Color(247, 247, 247));

        lbTitle.setFont(new java.awt.Font("URW Gothic", 1, 48)); // NOI18N
        lbTitle.setForeground(new java.awt.Color(51, 51, 51));
        lbTitle.setText("NPB - Billetes");
        lbTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnHome.setBackground(new java.awt.Color(255, 215, 0));
        btnHome.setFont(new java.awt.Font("URW Gothic", 0, 24)); // NOI18N
        btnHome.setForeground(new java.awt.Color(51, 51, 51));
        btnHome.setText("Home");
        btnHome.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelTitleLayout = new javax.swing.GroupLayout(panelTitle);
        panelTitle.setLayout(panelTitleLayout);
        panelTitleLayout.setHorizontalGroup(
            panelTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTitleLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(lbTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91))
        );
        panelTitleLayout.setVerticalGroup(
            panelTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTitleLayout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(panelTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbTitle)
                    .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13))
        );

        panelCrud.setBackground(new java.awt.Color(241, 244, 249));

        lbNRO.setFont(new java.awt.Font("URW Gothic", 1, 18)); // NOI18N
        lbNRO.setForeground(new java.awt.Color(30, 30, 30));
        lbNRO.setText("NRO:");

        fieldNRO.setBackground(new java.awt.Color(247, 247, 247));
        fieldNRO.setFont(new java.awt.Font("URW Gothic L", 0, 18)); // NOI18N
        fieldNRO.setForeground(new java.awt.Color(30, 30, 30));
        fieldNRO.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbDate.setFont(new java.awt.Font("URW Gothic", 1, 18)); // NOI18N
        lbDate.setForeground(new java.awt.Color(30, 30, 30));
        lbDate.setText("Fecha:");

        fieldDate.setBackground(new java.awt.Color(247, 247, 247));
        fieldDate.setFont(new java.awt.Font("URW Gothic L", 0, 18)); // NOI18N
        fieldDate.setForeground(new java.awt.Color(30, 30, 30));
        fieldDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbTime.setFont(new java.awt.Font("URW Gothic", 1, 18)); // NOI18N
        lbTime.setForeground(new java.awt.Color(30, 30, 30));
        lbTime.setText("Hora:");

        fieldTime.setBackground(new java.awt.Color(247, 247, 247));
        fieldTime.setFont(new java.awt.Font("URW Gothic L", 0, 18)); // NOI18N
        fieldTime.setForeground(new java.awt.Color(30, 30, 30));
        fieldTime.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbOrigin.setFont(new java.awt.Font("URW Gothic", 1, 18)); // NOI18N
        lbOrigin.setForeground(new java.awt.Color(30, 30, 30));
        lbOrigin.setText("Origen:");

        lbDestination.setFont(new java.awt.Font("URW Gothic", 1, 18)); // NOI18N
        lbDestination.setForeground(new java.awt.Color(30, 30, 30));
        lbDestination.setText("Destino:");

        lbClient.setFont(new java.awt.Font("URW Gothic", 1, 18)); // NOI18N
        lbClient.setForeground(new java.awt.Color(30, 30, 30));
        lbClient.setText("Cliente:");

        lbCompany.setFont(new java.awt.Font("URW Gothic", 1, 18)); // NOI18N
        lbCompany.setForeground(new java.awt.Color(30, 30, 30));
        lbCompany.setText("Compañía:");

        lbSearch.setFont(new java.awt.Font("URW Gothic", 1, 18)); // NOI18N
        lbSearch.setForeground(new java.awt.Color(30, 30, 30));
        lbSearch.setText("Búsqueda ID:");

        selectSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnCreate.setBackground(new java.awt.Color(255, 215, 0));
        btnCreate.setFont(new java.awt.Font("URW Gothic", 0, 24)); // NOI18N
        btnCreate.setForeground(new java.awt.Color(51, 51, 51));
        btnCreate.setText("Create");
        btnCreate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(255, 215, 0));
        btnUpdate.setFont(new java.awt.Font("URW Gothic", 0, 24)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(51, 51, 51));
        btnUpdate.setText("Update");
        btnUpdate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 215, 0));
        btnDelete.setFont(new java.awt.Font("URW Gothic", 0, 24)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(51, 51, 51));
        btnDelete.setText("Delete");
        btnDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClean.setBackground(new java.awt.Color(255, 215, 0));
        btnClean.setFont(new java.awt.Font("URW Gothic", 0, 24)); // NOI18N
        btnClean.setForeground(new java.awt.Color(51, 51, 51));
        btnClean.setText("Clean");
        btnClean.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanActionPerformed(evt);
            }
        });

        btnSearch.setBackground(new java.awt.Color(255, 215, 0));
        btnSearch.setFont(new java.awt.Font("URW Gothic", 0, 24)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(51, 51, 51));
        btnSearch.setText("Search");
        btnSearch.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        selectClient.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        selectCompany.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        selectOrigin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        selectDestination.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout panelCrudLayout = new javax.swing.GroupLayout(panelCrud);
        panelCrud.setLayout(panelCrudLayout);
        panelCrudLayout.setHorizontalGroup(
            panelCrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCrudLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(panelCrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCrudLayout.createSequentialGroup()
                        .addGap(510, 510, 510)
                        .addComponent(btnClean, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelCrudLayout.createSequentialGroup()
                        .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelCrudLayout.createSequentialGroup()
                        .addGroup(panelCrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelCrudLayout.createSequentialGroup()
                                .addComponent(lbClient)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(selectClient, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelCrudLayout.createSequentialGroup()
                                .addComponent(lbNRO)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(fieldNRO, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelCrudLayout.createSequentialGroup()
                                .addComponent(lbTime)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(fieldTime, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelCrudLayout.createSequentialGroup()
                                .addComponent(lbDate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                                .addComponent(fieldDate, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(132, 132, 132)
                        .addGroup(panelCrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbOrigin)
                            .addComponent(lbDestination)
                            .addComponent(lbCompany)
                            .addComponent(lbSearch))
                        .addGap(59, 59, 59)
                        .addGroup(panelCrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(selectSearch, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectCompany, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectOrigin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectDestination, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        panelCrudLayout.setVerticalGroup(
            panelCrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCrudLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(panelCrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCrudLayout.createSequentialGroup()
                        .addGroup(panelCrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbNRO)
                            .addComponent(fieldNRO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbOrigin)
                            .addComponent(selectOrigin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelCrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbDate)
                            .addComponent(fieldDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbDestination)
                            .addComponent(selectDestination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(panelCrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelCrudLayout.createSequentialGroup()
                                .addComponent(lbCompany)
                                .addGap(12, 12, 12)
                                .addComponent(lbSearch))
                            .addGroup(panelCrudLayout.createSequentialGroup()
                                .addGroup(panelCrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fieldTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbTime))
                                .addGap(14, 14, 14)
                                .addGroup(panelCrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lbClient)
                                    .addComponent(selectClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(panelCrudLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(selectCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(selectSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(panelCrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClean, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        panelTable.setBackground(new java.awt.Color(251, 238, 241));

        table.setBackground(new java.awt.Color(255, 255, 255));
        table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "NRO", "Cliente", "Fecha", "Hora", "Origen", "Destino", "Compañía"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        subpanelTable.setViewportView(table);

        javax.swing.GroupLayout panelTableLayout = new javax.swing.GroupLayout(panelTable);
        panelTable.setLayout(panelTableLayout);
        panelTableLayout.setHorizontalGroup(
            panelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTableLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(subpanelTable, javax.swing.GroupLayout.PREFERRED_SIZE, 880, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        panelTableLayout.setVerticalGroup(
            panelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTableLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(subpanelTable, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelBilleteLayout = new javax.swing.GroupLayout(panelBillete);
        panelBillete.setLayout(panelBilleteLayout);
        panelBilleteLayout.setHorizontalGroup(
            panelBilleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelCrud, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelBilleteLayout.setVerticalGroup(
            panelBilleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBilleteLayout.createSequentialGroup()
                .addComponent(panelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelCrud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBillete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBillete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadData() {
        // load id in Select Search
        ArrayList<String> listaID = TicketDAO.findOnlyID();
        selectSearch.removeAllItems();

        for (String item : listaID) {
            selectSearch.addItem(item);
        }

        // load id Client in Select Client
        ArrayList<String> listaIDClient = UserDAO.getUsersOnlyID();
        selectClient.removeAllItems();

        for (String item : listaIDClient) {
            selectClient.addItem(item);
        }

        // load id Client in Select Company
        ArrayList<String> listaIDCompany = CompanyDAO.findOnlyID();
        selectCompany.removeAllItems();

        for (String item : listaIDCompany) {
            selectCompany.addItem(item);
        }

        // load id Client in Select Destination
        ArrayList<String> listaIDDestination = PlaceDAO.findOnlyID();
        selectDestination.removeAllItems();

        for (String item : listaIDDestination) {
            selectDestination.addItem(item);
        }

        // load id Client in Select Origin
        ArrayList<String> listaIDOrigin = PlaceDAO.findOnlyID();
        selectOrigin.removeAllItems();

        for (String item : listaIDOrigin) {
            selectOrigin.addItem(item);
        }

        // load data in jtable
        ArrayList<TicketModel> listaCompany = TicketDAO.findAll();
        DefaultTableModel tabla = new DefaultTableModel();
        tabla.addColumn("NRO");
        tabla.addColumn("FECHA");
        tabla.addColumn("HORA");
        tabla.addColumn("COMPAÑIA");
        tabla.addColumn("ORIGEN");
        tabla.addColumn("DESTINO");
        tabla.addColumn("CLIENTE");

        for (TicketModel ticket : listaCompany) {
            tabla.addRow(new Object[]{ticket.getId(), ticket.getDate(), ticket.getTime(), ticket.getCompany(),
                ticket.getOrigin(), ticket.getDestination(), ticket.getDni()});
        }

        this.table.setModel(tabla);
    }

    private void btnCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanActionPerformed
        // TODO add your handling code here:
        Tools.cleanField(listField);
    }//GEN-LAST:event_btnCleanActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
        Tools.goToOperations(this);
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        if (!Tools.verifiedTextNotEmpty(listField)) {
            return;
        }

        try {
            int id = Integer.parseInt(fieldNRO.getText());
            TicketModel companiaRegistrado = TicketDAO.findByID(id);

            if (companiaRegistrado == null) {
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                Date date;
                LocalTime time;

                String dateText = fieldDate.getText();
                String timeText = fieldTime.getText();

                date = dateFormat.parse(dateText);
                time = LocalTime.parse(timeText);

                TicketModel companiaNuevo = new TicketModel(
                        fieldNRO.getText(),
                        selectOrigin.getSelectedItem().toString(),
                        selectDestination.getSelectedItem().toString(),
                        date,
                        time,
                        selectClient.getSelectedItem().toString(),
                        selectCompany.getSelectedItem().toString()
                );
                TicketDAO.create(companiaNuevo);
                JOptionPane.showMessageDialog(null, "Ticket registrado exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                this.loadData();

            } else {
                JOptionPane.showMessageDialog(null, "Error: ID registrado.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (NumberFormatException e) {
            System.err.println("Error al parsear texto: " + e.getMessage());
            JOptionPane.showMessageDialog(null, "Error: El texto no es un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (ParseException ex) {
            Logger.getLogger(Ticket.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if (!Tools.verifiedTextNotEmpty(listField)) {
            return;
        }

        try {
            int id = Integer.parseInt(fieldNRO.getText());
            TicketModel existingTicket = TicketDAO.findByID(id);

            if (existingTicket != null) {
                SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");

                Date date = dateFormat.parse(fieldDate.getText());
                LocalTime time = LocalTime.parse(fieldTime.getText());

                existingTicket.setId(fieldNRO.getText());
                existingTicket.setOrigin(selectOrigin.getSelectedItem().toString());
                existingTicket.setDestination(selectDestination.getSelectedItem().toString());
                existingTicket.setDate(date);
                existingTicket.setTime(time);
                existingTicket.setDni(selectClient.getSelectedItem().toString());
                existingTicket.setCompany(selectCompany.getSelectedItem().toString());

                TicketDAO.update(id, existingTicket);

                JOptionPane.showMessageDialog(null, "Ticket actualizado correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);

                this.loadData();

            } else {
                JOptionPane.showMessageDialog(null, "Error: ID no encontrado.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (NumberFormatException e) {
            System.err.println("Error al parsear texto: " + e.getMessage());
            JOptionPane.showMessageDialog(null, "Error: El texto no es un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (ParseException ex) {
            Logger.getLogger(Ticket.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Error al convertir fecha/hora.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        String stringID = selectSearch.getSelectedItem().toString();
        int intID = Integer.parseInt(stringID);
        TicketDAO.delete(intID);
        JOptionPane.showMessageDialog(null, "Ticket eliminado exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
        this.loadData();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String stringID = selectSearch.getSelectedItem().toString();
        int intID = Integer.parseInt(stringID);
        TicketModel companiaBuscado = TicketDAO.findByID(intID);

        String dateText = new SimpleDateFormat("dd-MM-yyyy").format(companiaBuscado.getDate());
        String timeText = companiaBuscado.getTime().toString();

        fieldNRO.setText(companiaBuscado.getId());
        fieldDate.setText(dateText);
        fieldTime.setText(timeText);
        selectClient.setSelectedItem(companiaBuscado.getDni());
        selectCompany.setSelectedItem(companiaBuscado.getCompany());
        selectDestination.setSelectedItem(companiaBuscado.getDestination());
        selectOrigin.setSelectedItem(companiaBuscado.getOrigin());
    }//GEN-LAST:event_btnSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClean;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JTextField fieldDate;
    private javax.swing.JTextField fieldNRO;
    private javax.swing.JTextField fieldTime;
    private javax.swing.JLabel lbClient;
    private javax.swing.JLabel lbCompany;
    private javax.swing.JLabel lbDate;
    private javax.swing.JLabel lbDestination;
    private javax.swing.JLabel lbNRO;
    private javax.swing.JLabel lbOrigin;
    private javax.swing.JLabel lbSearch;
    private javax.swing.JLabel lbTime;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JPanel panelBillete;
    private javax.swing.JPanel panelCrud;
    private javax.swing.JPanel panelTable;
    private javax.swing.JPanel panelTitle;
    private javax.swing.JComboBox<String> selectClient;
    private javax.swing.JComboBox<String> selectCompany;
    private javax.swing.JComboBox<String> selectDestination;
    private javax.swing.JComboBox<String> selectOrigin;
    private javax.swing.JComboBox<String> selectSearch;
    private javax.swing.JScrollPane subpanelTable;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
